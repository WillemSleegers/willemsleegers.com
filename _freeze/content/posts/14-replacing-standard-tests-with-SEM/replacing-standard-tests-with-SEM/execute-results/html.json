{
  "hash": "552606712112c00daca23a0f48bce5e7",
  "result": {
    "markdown": "---\ntitle: Replacing standard tests with SEM\ndescription: \"Description\"\ndate: 2022-06-14\ncategories:\n  - statistics\n  - tutorial\ncode-fold: true\ntoc: true\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(tidyverse)\nlibrary(lavaan)\n\n# Set options\noptions(\n  knitr.kable.NA = \"-\", \n  digits = 2\n)\n\ntheme_set(theme_minimal())\n```\n:::\n\n\nIn this post I will show how to use structural equation modeling to run common statistical tests. Although this will generally involve more code and a steeper learning curve to running these tests, it will promote a more general understanding of these tests and also enable you to go beyond the usual norms and run better analyses.\n\n## T-test\n\nLet's begin with a simple *t*-test. Below is the code to run a *t*-test using what is probably the most common function for this test in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(extra ~ group, data = sleep)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  extra by group\nt = -2, df = 18, p-value = 0.08\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n -3.37  0.21\nsample estimates:\nmean in group 1 mean in group 2 \n           0.75            2.33 \n```\n:::\n\n```{.r .cell-code}\nlm(extra ~ group, data = sleep) |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = extra ~ group, data = sleep)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -2.43  -1.30  -0.58   1.46   3.17 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept)    0.750      0.600    1.25    0.228  \ngroup2         1.580      0.849    1.86    0.079 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.9 on 18 degrees of freedom\nMultiple R-squared:  0.161,\tAdjusted R-squared:  0.115 \nF-statistic: 3.46 on 1 and 18 DF,  p-value: 0.0792\n```\n:::\n\n```{.r .cell-code}\nsleep2 <- mutate(sleep, group = as.numeric(group))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- \"\n  # Regression model\n  extra ~ 1 + group\n\n  group ~~ group\n\"\n\nfit <- sem(model = model, data = sleep2)\nsummary(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6-11 ended normally after 22 iterations\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         5\n                                                      \n  Number of observations                            20\n                                                      \nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nParameter Estimates:\n\n  Standard errors                             Standard\n  Information                                 Expected\n  Information saturated (h1) model          Structured\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|)\n  extra ~                                             \n    group             1.580    0.806    1.961    0.050\n\nIntercepts:\n                   Estimate  Std.Err  z-value  P(>|z|)\n   .extra            -0.830    1.274   -0.652    0.515\n    group             1.500    0.112   13.416    0.000\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|)\n    group             0.250    0.079    3.162    0.002\n   .extra             3.244    1.026    3.162    0.002\n```\n:::\n:::\n",
    "supporting": [
      "replacing-standard-tests-with-SEM_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}