{
  "hash": "5f5d58c8b18a183660efc8219e63787b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Custom functions to inspect the chains of a Bayesian regression model using brms\"\ndescription: \"A post on some custom functions to inspect the chains of a Bayesian regression model using brms.\"\ndate: 2024-03-06\ncategories:\n  - statistics\n  - package\n  - Bayesian statistics\ncode-fold: show\ncode-tools: true\ntoc: true\ndraft: true\nformat: \n  html: \n    df-print: kable\n---\n\n\nThis is a brief post about some custom functions I wrote to inspect the chains of a Bayesian regression model using brms.\n\n## Setup\n\nRun the following setup code to get started.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(brms)\n\ndata <- read_csv(\"Howell1.csv\") |>\n  filter(age >= 18) |>\n  mutate(\n    height_z  = (height - mean(height)) / sd(height),\n    weight_z  = (weight - mean(weight)) / sd(weight)\n  )\n```\n:::\n\n\n## A simple model\n\nLet's run a simple model estimating the correlation between weight and height in the provided data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- brm(\n  height_z ~ 0 + weight_z,\n  data = data,\n  family = gaussian(),\n  sample_prior = TRUE,\n  seed = 4,\n  cores = 4,\n  threads = 4,\n  backend = \"cmdstanr\",\n  file = \"models/model.rds\",\n  file_refit = \"on_change\",\n  silent = 2\n)\n\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: gaussian \n  Links: mu = identity; sigma = identity \nFormula: height_z ~ 0 + weight_z \n   Data: data (Number of observations: 352) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nPopulation-Level Effects: \n         Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nweight_z     0.76      0.04     0.69     0.82 1.00     3390     2645\n\nFamily Specific Parameters: \n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     0.66      0.02     0.61     0.71 1.00     3571     2932\n\nDraws were sampled using sample(hmc). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n\n\n:::\n:::\n\n\n## brms_chains()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrms_chains <- function(x, exclude_priors = FALSE, exclude_lp = TRUE) {\n  chains <- x |>\n    as_draws_df() |>\n    tibble::as_tibble() |>\n    tidyr::pivot_longer(\n      cols = -c(.chain, .iteration, .draw),\n      names_to = \"variable\",\n    ) |>\n    dplyr::arrange(variable, .chain)\n\n  if (exclude_priors) {\n    chains <- dplyr::filter(chains, !str_detect(variable, \"prior\"))\n  }\n\n  if (exclude_lp) {\n    chains <- dplyr::filter(chains, !variable %in% c(\"lp__\", \"lprior\"))\n  }\n\n  return(chains)\n}\n```\n:::\n\n\nWe can now inspect the chains using the custom `brms_chains()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrms_chains(model) |> head()\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| .chain| .iteration| .draw|variable   |    value|\n|------:|----------:|-----:|:----------|--------:|\n|      1|          1|     1|b_weight_z | 0.750685|\n|      1|          2|     2|b_weight_z | 0.738743|\n|      1|          3|     3|b_weight_z | 0.744030|\n|      1|          4|     4|b_weight_z | 0.835329|\n|      1|          5|     5|b_weight_z | 0.729031|\n|      1|          6|     6|b_weight_z | 0.785118|\n\n</div>\n:::\n:::\n\n\n## plot_brms_chains()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_brms_chains <- function(x, exclude_priors = FALSE, exclude_lp = TRUE) {\n  chains <- brms_chains(\n    x,\n    exclude_priors = exclude_priors, exclude_lp = exclude_lp\n  ) |>\n    dplyr::mutate(.chain = factor(.chain))\n\n  ggplot2::ggplot(\n    chains,\n    aes(x = .iteration, y = value, color = .chain)\n  ) +\n    ggplot2::facet_wrap(variable ~ ., ncol = 1, scale = \"free\") +\n    ggplot2::geom_line() +\n    ggplot2::theme_minimal() +\n    ggplot2::scale_color_grey()\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_brms_chains(model)\n```\n\n::: {.cell-output-display}\n![](custom-brms-functions_files/figure-html/plot-brms-chains-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "custom-brms-functions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}