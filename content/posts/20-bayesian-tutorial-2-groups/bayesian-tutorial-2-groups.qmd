---
title: "Bayesian tutorial: Two groups"
description: "The fourth of a series of tutorial posts on Bayesian analyses. In this post I focus on using `brms` to model the difference between two groups."
date: 2022-11-24
categories:
  - statistics
  - tutorial
  - Bayesian statistics
  - regression
code-fold: true
code-tools: true
toc: true
draft: true
---

```{r}
#| label: setup
#| message: false
library(tidyverse)
library(brms)
library(tidybayes)

data <- read_csv("Howell1.csv")
data <- filter(data, age >= 18)

theme_set(theme_minimal())

colors <- c("#93CFDB", "#1E466E")
```

The formula for our correlation analysis is `height ~ male`. 

```{r}
#| label: data-preparation
data <- mutate(data, female = 1 - male)
```

```{r}
#| label: get-prior
get_prior(height ~ 0 + male + female, data = data)
```

What should the prior for $\sigma$ be? With the variables standardized, $\sigma$ is limited to range from 0 to 1. If the predictor explains all the variance of the outcome variable, the residuals will be 0, meaning $\sigma$ will be 0. If the predictor explains no variance, $\sigma$ is equal to 1 because it will be similar to the standard deviation of the outcome variable, which is 1 because we've standardized it. Interestingly, this also means that the prior for $\sigma$ is now dependent on the prior for the slope, because the slope is what determines how much variance is explained in the outcome variable. So let's think about the prior for the slope.

The prior for the slope is a bit easier now. We can specify a normal distribution with a mean of 0 and a standard deviation of 0.5, together with a lower bound of -1 and upper bound of 1. With a standard deviation of 0.5, we cover a large range of possible slopes, but assign more plausibility to smaller correlations and less plausibility to very high correlations (like 1 and -1).

As for $\sigma$, let's keep it simple and use a uniform prior that assign equal plausibility to each value between 0 and 1.

```{r}
#| label: model-height-weight_z
model_height_male <- brm(
  height ~ 0 + male + female,  
  data = data, 
  family = gaussian,
  sample_prior = TRUE,
  cores = 4,
  seed = 4,
  #file = "models/model_height_.rds"
)

model_height_male

get_variables(model_height_male)

draws <- spread_draws(model_height_male, b_male, b_female)
draws <- mutate(draws, diff = b_male - b_female)

median_qi(draws$diff)

lm(height ~ male, data = data)
```

Taking a look at the estimates, we see the intercept is indeed 0 (we forced this). The estimate for the slope is `r round(fixef(model_height_weight_z)[2, 1], 2)`, i.e., the correlation. This means that the estimate for sigma is the square root of 1 minus the variance of the slope estimate (`r round(fixef(model_height_weight_z)[2, 1], 2)`Â²). In our case, that's .66, which matches the estimate for sigma.