---
title: Bootstrapping
description: "A post on how to obtain p-values through bootstrapping."
date: 2023-12-25
categories:
  - statistics
  - bootstrapping
code-fold: show
code-tools: true
toc: true
toc-depth: 2
draft: true
---

## Setup

Run the following code to get started.

```{r}
#| label: setup
#| message: false
library(MASS)
library(tidyverse)
library(infer)

theme_set(theme_minimal())

options(
  knitr.kable.NA = "",
  digits = 2
)
```

## One sample t-test

```{r}
#| label: One sample t-test data
# Set parameters
M <- 1
SD <- 5
N <- 100

# Simulate data
samples <- mvrnorm(n = N, mu = M, Sigma = SD^2, empirical = TRUE)
colnames(samples) <- "x"
data <- as_tibble(samples)

# Run one sample t-test
t.test(data$x)
```

```{r}
#| label: One sample t-test bootstrapping
reps <- 1000

draw <- function(x, mu) {
  x <- x - mu
  sample <- sample(x, size = length(x), replace = TRUE)
  sample
}

obs_mean <- mean(data$x)

set.seed(1)

null_dist <- tibble(rep = 1:reps) |>
  group_by(rep) |>
  reframe(draw = draw(data$x, mu = obs_mean)) |>
  group_by(rep) |>
  summarize(null_stat = mean(draw))

p_value <- sum(abs(null_dist$null_stat) >= obs_mean) / 1000
p_value
```

```{r}
#| label: One sample t-test infer
set.seed(1)
reps <- 1000

obs_mean <- data %>%
  specify(response = x) %>%
  calculate(stat = "mean")

null_dist <- data |>
  specify(response = x) |>
  hypothesize(null = "point", mu = 0) |>
  generate(reps = reps, type = "bootstrap") |>
  calculate(stat = "mean")

get_p_value(null_dist, obs_stat = obs_mean, direction = "two-sided")
```

## Two sample t-test

```{r}
#| label: Two sample t-test data
# Set parameters
Ms <- c(1, 1.25)
SDs <- c(1, 1)
n <- 100

# Prepare parameters
sigma <- matrix(0, nrow = length(SDs), ncol = length(SDs))
diag(sigma) <- SDs^2

# Simulate data
samples <- mvrnorm(n = n, mu = Ms, Sigma = sigma)

# Prepare data
colnames(samples) <- c("control", "treatment")
data <- samples |>
  as_tibble() |>
  pivot_longer(
    cols = everything(),
    names_to = "condition",
    values_to = "outcome"
  )

# Run one sample t-test
t.test(outcome ~ condition, data = data)
```

```{r}
#| label: Two sample t-test infer
set.seed(1)
reps <- 1000

observed_statistic <- data %>%
  specify(outcome ~ condition) %>%
  calculate(stat = "diff in means", order = c("treatment", "control"))

null_dist <- data |>
  specify(outcome ~ condition) |>
  hypothesize(null = "independence") |>
  generate(reps = reps, type = "bootstrap") |>
  calculate(stat = "diff in means", order = c("treatment", "control"))

null_dist %>%
  visualize() +
  shade_p_value(observed_statistic,
    direction = "two-sided"
  )

get_p_value(
  null_dist,
  obs_stat = observed_statistic,
  direction = "two-sided"
)
```