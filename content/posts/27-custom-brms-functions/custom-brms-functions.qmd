---
title: "Custom functions to inspect the chains of a Bayesian regression model using brms"
description: "A post on some custom functions to inspect the chains of a Bayesian regression model using brms."
date: 2024-03-06
categories:
  - statistics
  - package
  - Bayesian statistics
code-fold: show
code-tools: true
toc: true
format: 
  html: 
    df-print: kable
---

This is a brief post about some custom functions I wrote to inspect the chains of a Bayesian regression model using brms.

## Setup

Run the following setup code to get started.

```{r}
#| label: setup
#| message: false
library(tidyverse)
library(brms)

data <- read_csv("Howell1.csv") |>
  filter(age >= 18) |>
  mutate(
    height_z  = (height - mean(height)) / sd(height),
    weight_z  = (weight - mean(weight)) / sd(weight)
  )
```

## A simple model

Let's run a simple model estimating the correlation between weight and height in the provided data set.

```{r}
#| label: model-height-weight_z
model <- brm(
  height_z ~ 0 + weight_z,
  data = data,
  family = gaussian(),
  sample_prior = TRUE,
  seed = 4,
  cores = 4,
  threads = 4,
  backend = "cmdstanr",
  file = "models/model.rds",
  file_refit = "on_change",
  silent = 2
)

model
```

## brms_chains()

```{r}
#| label: brms-chains-functions
brms_chains <- function(x, exclude_priors = FALSE, exclude_lp = TRUE) {
  chains <- x |>
    as_draws_df() |>
    tibble::as_tibble() |>
    tidyr::pivot_longer(
      cols = -c(.chain, .iteration, .draw),
      names_to = "variable",
    ) |>
    dplyr::arrange(variable, .chain)

  if (exclude_priors) {
    chains <- dplyr::filter(chains, !str_detect(variable, "prior"))
  }

  if (exclude_lp) {
    chains <- dplyr::filter(chains, !variable %in% c("lp__", "lprior"))
  }

  return(chains)
}
```

We can now inspect the chains using the custom `brms_chains()` function.

```{r}
#| label: brms-chains-example
brms_chains(model) |> head()
```

## plot_brms_chains()

```{r}
#| label: plot-brms-chains-function
plot_brms_chains <- function(x, exclude_priors = FALSE, exclude_lp = TRUE) {
  chains <- brms_chains(
    x,
    exclude_priors = exclude_priors, exclude_lp = exclude_lp
  ) |>
    dplyr::mutate(.chain = factor(.chain))

  ggplot2::ggplot(
    chains,
    aes(x = .iteration, y = value, color = .chain)
  ) +
    ggplot2::facet_wrap(variable ~ ., ncol = 1, scale = "free") +
    ggplot2::geom_line() +
    ggplot2::theme_minimal() +
    ggplot2::scale_color_grey()
}
```



```{r}
#| label: plot-brms-chains
plot_brms_chains(model)
```
